import axios from 'axios';

const API_URL = 'http://localhost:8080/api/kich-thuoc';

// C·∫•u h√¨nh axios v·ªõi timeout v√† baseURL
const axiosInstance = axios.create({
  baseURL: API_URL,
  timeout: 10000,
  headers: {
    'Content-Type': 'application/json',
  },
});

// üëá G·∫Øn token Authorization cho m·ªçi request (n·∫øu c√≥)
axiosInstance.interceptors.request.use((config) => {
  const token = localStorage.getItem('token'); // ho·∫∑c 'access_token', t√πy b·∫°n l∆∞u key n√†o
  if (token) {
    config.headers.Authorization = `Bearer ${token}`;
  }
  return config;
});


// L·∫•y danh s√°ch ch·∫•t li·ªáu v·ªõi h·ªó tr·ª£ ph√¢n trang
export const getAllKichThuoc = async (page = 0, size = 10) => {
  try {
    const response = await axiosInstance.get('/all', {
      params: { page, size },
    });
    return response.data; // Tr·∫£ v·ªÅ d·ªØ li·ªáu ph√¢n trang t·ª´ server
  } catch (error) {
    throw new Error(
      error.response?.data?.message || 'Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu t·ª´ server'
    );
  }
};

// Th√™m ch·∫•t li·ªáu m·ªõi
export const addKichThuoc = async (kichThuoc) => {
  try {
    if (!kichThuoc || typeof kichThuoc !== 'object') {
      throw new Error('D·ªØ li·ªáu ch·∫•t li·ªáu kh√¥ng h·ª£p l·ªá');
    }
    const response = await axiosInstance.post('', kichThuoc);
    return response.data;
  } catch (error) {
    throw new Error(
      error.response?.data?.message || 'Th√™m th·∫•t b·∫°i'
    );
  }
};

// C·∫≠p nh·∫≠t ch·∫•t li·ªáu
export const updateKichThuoc = async (id, kichThuoc) => {
  try {
    if (!id || !kichThuoc || typeof kichThuoc !== 'object') {
      throw new Error('ID ho·∫∑c d·ªØ li·ªáu ch·∫•t li·ªáu kh√¥ng h·ª£p l·ªá');
    }
    const response = await axiosInstance.put(`/${id}`, kichThuoc);
    return response.data; // Tr·∫£ v·ªÅ d·ªØ li·ªáu t·ª´ server (n·∫øu backend c√≥ tr·∫£ v·ªÅ)
  } catch (error) {
    throw new Error(
      error.response?.data?.message || 'C·∫≠p nh·∫≠t ch·∫•t li·ªáu th·∫•t b·∫°i'
    );
  }
};
export const deleteKichThuoc = async (id) => {
  try {
    if (!id) {
      throw new Error('ID kh√¥ng h·ª£p l·ªá');
    }

     const response = await axiosInstance.put(`/toggle-status/${id}`);
    return { success: true, message: 'X√≥a k√≠ch th∆∞·ªõc th√†nh c√¥ng' };
  } catch (error) {
    console.error('üî• L·ªói khi x√≥a k√≠ch th∆∞·ªõc:', error); // üëà Th√™m d√≤ng n√†y ƒë·ªÉ in l·ªói chi ti·∫øt
    throw new Error(
      error.response?.data?.message || 'X√≥a k√≠ch th∆∞·ªõc th·∫•t b·∫°i'
    );
  }
};




// T√¨m ki·∫øm ch·∫•t li·ªáu theo t√™n
export const searchKichThuocByName = async (ten, page = 0, size = 10) => {
  try {
    if (!ten || typeof ten !== 'string' || ten.trim() === '') {
      throw new Error('T√™n ch·∫•t li·ªáu t√¨m ki·∫øm kh√¥ng h·ª£p l·ªá');
    }
    const response = await axiosInstance.get('/search', {
      params: { ten, page, size },
    });
    return response.data; // Tr·∫£ v·ªÅ d·ªØ li·ªáu ph√¢n trang t·ª´ server
  } catch (error) {
    throw new Error(
      error.response?.data?.message || 'T√¨m ki·∫øm ch·∫•t li·ªáu th·∫•t b·∫°i'
    );
  }
};

// T√¨m ki·∫øm ch·∫•t li·ªáu theo t√™n ho·∫∑c m√£
export const searchKichThuocByNameOrCode = async (keyword, page = 0, size = 10) => {
  try {
    if (!keyword || typeof keyword !== 'string' || keyword.trim() === '') {
      throw new Error('T·ª´ kh√≥a t√¨m ki·∫øm kh√¥ng h·ª£p l·ªá');
    }
    const response = await axiosInstance.get('/search-by-name-or-code', {
      params: { keyword, page, size },
    });
    return response.data; // Tr·∫£ v·ªÅ d·ªØ li·ªáu ph√¢n trang t·ª´ server
  } catch (error) {
    throw new Error(
      error.response?.data?.message || 'T√¨m ki·∫øm ch·∫•t li·ªáu th·∫•t b·∫°i'
    );
  }
};