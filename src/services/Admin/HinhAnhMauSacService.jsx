import axios from 'axios';
import { toast } from 'react-toastify'; // T√πy ch·ªçn, n·∫øu b·∫°n d√πng th∆∞ vi·ªán th√¥ng b√°o

// ƒê·ªãnh nghƒ©a URL v·ªõi bi·∫øn m√¥i tr∆∞·ªùng Vite
const BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:8080';
const STATIC_URL = import.meta.env.VITE_STATIC_URL || 'http://localhost:8080';

// L·∫•y danh s√°ch h√¨nh ·∫£nh theo mauSacId
export const getHinhAnhByMauSacId = async (mauSacId) => {
  try {
    const response = await axios.get(`${BASE_URL}/api/hinh-anh-mau-sac/mau-sac/${mauSacId}`, {
      timeout: 10000,
    });
    if (response.data && Array.isArray(response.data)) {
      return response.data.map((hinhAnh) => ({
        ...hinhAnh,
        hinhAnh: hinhAnh.hinhAnh.startsWith('/uploads/')
          ? `${STATIC_URL}${hinhAnh.hinhAnh}`
          : `${STATIC_URL}/uploads/${hinhAnh.hinhAnh}`, // ƒë·∫£m b·∫£o frontend lu√¥n c√≥ ·∫£nh ƒë·∫ßy ƒë·ªß
      }));
    }
    throw new Error('D·ªØ li·ªáu tr·∫£ v·ªÅ kh√¥ng h·ª£p l·ªá');
  } catch (error) {
    console.error('L·ªói khi l·∫•y danh s√°ch h√¨nh ·∫£nh:', error);
    toast.error(`L·ªói: ${error.response?.data?.message || error.message || 'Kh√¥ng th·ªÉ t·∫£i h√¨nh ·∫£nh'}`);
    throw error;
  }
};

// ‚úÖ Upload h√¨nh ·∫£nh v√† TR·∫¢ V·ªÄ T√äN FILE (VD: "balo81.jpg")
export const uploadHinhAnhMauSac = async (file, mauSacId) => {
  try {
    const formData = new FormData();
    formData.append('file', file);
    formData.append('mauSacId', mauSacId);

    const response = await axios.post(`${BASE_URL}/api/hinh-anh-mau-sac/upload`, formData, {
      headers: {
        'Content-Type': 'multipart/form-data',
      },
      timeout: 30000,
    });

    console.log('üì¶ Upload response:', response.data);

    if (response.data && typeof response.data === 'string') {
      toast.success('T·∫£i ·∫£nh th√†nh c√¥ng');
      return response.data; // ch·ªâ l√† "balo81.jpg"
    }

    throw new Error('Ph·∫£n h·ªìi t·ª´ server kh√¥ng h·ª£p l·ªá');
  } catch (error) {
    console.error('L·ªói khi upload ·∫£nh:', error);
    toast.error(`L·ªói: ${error.response?.data?.message || error.message || 'Upload th·∫•t b·∫°i'}`);
    throw error;
  }
};

// ‚úÖ Th√™m h√¨nh ·∫£nh (ch·ªâ g·ª≠i t√™n file, kh√¥ng c√≥ /uploads/)
export const addHinhAnhMauSac = async (hinhAnhData) => {
  try {
    const payload = {
      ...hinhAnhData,
      hinhAnh: hinhAnhData.hinhAnh?.replace('/uploads/', '') || '',
    };

    const response = await axios.post(`${BASE_URL}/api/hinh-anh-mau-sac`, payload, {
      headers: {
        'Content-Type': 'application/json',
      },
      timeout: 10000,
    });
    toast.success('Th√™m h√¨nh ·∫£nh th√†nh c√¥ng');
    return response.data;
  } catch (error) {
    console.error('L·ªói khi th√™m h√¨nh ·∫£nh:', error);
    toast.error(`L·ªói: ${error.response?.data?.message || error.message || 'Th√™m th·∫•t b·∫°i'}`);
    throw error;
  }
};

// C·∫≠p nh·∫≠t h√¨nh ·∫£nh
export const updateHinhAnhMauSac = async (id, hinhAnhData) => {
  try {
    const payload = {
      ...hinhAnhData,
      hinhAnh: hinhAnhData.hinhAnh?.replace('/uploads/', '') || '',
    };

    const response = await axios.put(`${BASE_URL}/api/hinh-anh-mau-sac/${id}`, payload, {
      headers: {
        'Content-Type': 'application/json',
      },
      timeout: 10000,
    });
    toast.success('C·∫≠p nh·∫≠t h√¨nh ·∫£nh th√†nh c√¥ng');
    return response.data;
  } catch (error) {
    console.error('L·ªói khi c·∫≠p nh·∫≠t h√¨nh ·∫£nh:', error);
    toast.error(`L·ªói: ${error.response?.data?.message || error.message || 'C·∫≠p nh·∫≠t th·∫•t b·∫°i'}`);
    throw error;
  }
};

// X√≥a m·ªÅm h√¨nh ·∫£nh
export const deleteHinhAnhMauSac = async (id) => {
  try {
    const response = await axios.put(
      `${BASE_URL}/api/hinh-anh-mau-sac/toggle-status/${id}`,
      null,
      {
        headers: {
          'Content-Type': 'application/json',
        },
        timeout: 10000,
      }
    );
    toast.success('X√≥a h√¨nh ·∫£nh th√†nh c√¥ng');
    return response.data;
  } catch (error) {
    console.error('L·ªói khi x√≥a h√¨nh ·∫£nh:', error);
    toast.error(`L·ªói: ${error.response?.data?.message || error.message || 'X√≥a th·∫•t b·∫°i'}`);
    throw error;
  }
};

// Export t·∫•t c·∫£
export default {
  getHinhAnhByMauSacId,
  addHinhAnhMauSac,
  updateHinhAnhMauSac,
  deleteHinhAnhMauSac,
  uploadHinhAnhMauSac,
};
